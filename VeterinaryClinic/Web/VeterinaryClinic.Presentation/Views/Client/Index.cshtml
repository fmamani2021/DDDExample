@using System.Text.Json

@{
    ViewData["Title"] = "Clients";
}

<style>

    .k-edit-form-container {
        width: auto;
    }

</style>

<div id="view_client" class="row">
    <div id="grid_clients" data-role="grid"
         data-editable="{
            mode: 'popup',
            window: {
                title: 'Create Client',
                width: '700px',
                height: '800px'
            },
            template: $('#editor').html() }"         
         data-toolbar="['create']"
         data-columns="[
            { 'field': 'fullName', 'title': 'Full Name'  },
            { 'field': 'preferredName', 'title': 'Preferred Name'  },
            { 'field': 'salutation', 'title': 'Salutation'  },
            { 'field': 'emailAddress', 'title': 'Email Address'  },
            { 'field': 'preferredDoctorId', 'title': 'Preffered Doctor'  },
            { command: ['edit', 'destroy' ], title: '&nbsp;' , width: '250px' }
         ]"
         data-bind="source: client.dataSource,
            events: {
                save: client.actions.save,
                edit: client.actions.edit,
                remove: client.actions.remove,
                add: client.actions.add
            }"         
         data-pageable="{
            pageSizes: [10, 20, 50, 100],            
         }"         
         data-auto-bind="true"
         >
    </div>
</div>



<script id="editor" type="text/x-kendo-template">    
    <div class="col-xs-12">
        <div class="row mb-3">
            <label for="inputFullName" class="col-sm-4 col-form-label">Full Name</label>
            <div class="col-sm-8">
                <input id="inputFullName" type="text"
                       class="form-control"
                       placeholder="Enter FullName"
                       data-bind="value: fullName">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputPreferredName" class="col-sm-4 col-form-label">Preferred Name</label>
            <div class="col-sm-8">
                <input id="inputPreferredName" type="text"
                       class="form-control"
                       placeholder="Enter Preferred Name"
                       data-bind="value: preferredName">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputSalutation" class="col-sm-4 col-form-label">Salutation</label>
            <div class="col-sm-8">
                <input id="inputSalutation" type="text"
                       class="form-control"
                       placeholder="Enter Salutation"
                       data-bind="value: salutation">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputEmailAddress" class="col-sm-4 col-form-label">Email Address</label>
            <div class="col-sm-8">
                <input id="inputEmailAddress"
                       class="form-control"
                       placeholder="Enter Email Address"
                       data-bind="value: emailAddress">
            </div>
        </div>
         <div class="row mb-3">
            <label for="inputPrefferedDoctor" class="col-sm-4 col-form-label">Preffered Doctor</label>
            <div class="col-sm-8">
              <div id="ddlPrefferedDoctor" class="form-control"
                     style="width: 100%"
                     data-role="dropdownlist"
                     data-bind="
                        value: preferredDoctorId,
                        source: doctors.dataSource"
                     data-value-field="doctorId"
                     data-text-field="name"
                     data-value-primitive="true"
                     data-option-label=" ">
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-12">                
                <div id="grid_patients">
                </div>
            </div>
        </div>

    </div>
</script>

<script src="~/js/app/ClientMaintenance.js"></script>
<script>
    let doctors = @(Html.Raw(JsonSerializer.Serialize(ViewBag.Doctors, new JsonSerializerOptions() { PropertyNamingPolicy = JsonNamingPolicy.CamelCase })));

    let viewConfigs = {
        dataSources: {
            doctors: doctors
        },
        urls: {
            read:   '@Url.Action("Read", "Client")',
            create: '@Url.Action("Create", "Client")',
            update: '@Url.Action("Update", "Client")',
            delete: '@Url.Action("Delete", "Client")'            
        }
    }

    var clientMaintenance = new ClientMaintenance(viewConfigs);
    $(function () {
        clientMaintenance.onReady();
    })

</script>